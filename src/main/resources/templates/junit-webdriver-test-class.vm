package $packageName;

import java.util.regex.Pattern;
import java.util.concurrent.TimeUnit;

import org.apache.log4j.Logger;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Assert;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import static org.hamcrest.CoreMatchers.*;

import org.openqa.selenium.*;
import org.openqa.selenium.${wdBrowserDriver.toLowerCase()}.${wdBrowserDriver}Driver;
import org.openqa.selenium.support.ui.ExpectedCondition;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

public class ${className} {

	private static Logger logger = Logger.getLogger(${className}.class);
	private WebDriver driver;
    private String baseUrl = "${appBaseUrl}"; 
    private StringBuffer verificationErrors = new StringBuffer();
    
	@Before
	public void setUp() throws Exception {
		driver = new ${wdBrowserDriver}Driver();
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		driver.manage().timeouts().pageLoadTimeout(100, TimeUnit.SECONDS);
		driver.manage().timeouts().setScriptTimeout(100, TimeUnit.SECONDS);
	}
  
	@Test
	public void test() throws Exception {
    	$methodBody
	}
  
	@After
	public void tearDown() throws Exception {
		//Close the browser
        driver.quit();
		String verificationErrorString = verificationErrors.toString();
		if (!"".equals(verificationErrorString)) {
			Assert.fail(verificationErrorString);
		}
	}
	
	/**
	 * Test la presence d'un element
	 * 
	 */
	private boolean isElementPresent(By by) {
		try {
			driver.findElement(by);
			return true;
		} catch (NoSuchElementException e) {
			return false;
		}
	}

	/**
	 * Teste une expression dom
	 *
	 */
	public By byDom(String domExpression) {
        final Object o = ((JavascriptExecutor) driver).executeScript("return " + domExpression + ";");

        if (o instanceof WebElement) {
            return new By() {
                @Override
                public List<WebElement> findElements(SearchContext searchContext) {
                    return new ArrayList<WebElement>() {
                        {
                            add((WebElement) o);
                        }
                    };
                }
            };
        }
    }
  
}