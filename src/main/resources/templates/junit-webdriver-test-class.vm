package $packageName;

import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.lang.Thread;
import java.net.URL;

import java.util.regex.Pattern;
import java.util.concurrent.TimeUnit;

import org.apache.log4j.Logger;
import org.junit.AfterClass;
import org.junit.Assert;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import static org.hamcrest.CoreMatchers.*;

import org.openqa.selenium.*;
import org.openqa.selenium.firefox.${wdBrowserDriver}Driver;
import org.openqa.selenium.support.ui.Select;

public class ${className} {

	private static Logger logger = Logger.getLogger(${className}.class);
	private WebDriver driver;
    private String String baseUrl = "${appBaseUrl}"; 
    private StringBuffer verificationErrors = new StringBuffer();
    
	//@BeforeClass
	//public static void setUp() throws Exception {
    	//selenium = new DefaultSelenium("${seleniumServerHost}",${seleniumServerPort}, "", );
	//}
	
	@Before
	public void setUp() throws Exception {
		driver = new ${wdBrowserDriver}Driver();
		driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
		driver.manage().timeouts().pageLoadTimeout(100, SECONDS);
		driver.manage().timeouts().setScriptTimeout(100,SECONDS);
	}
  
	@Test
	public void test() throws Exception {
    	$methodBody
	}
  
	@After
	public static void tearDown() throws Exception {
		//Close the browser
        driver.quit();
		String verificationErrorString = verificationErrors.toString();
		if (!"".equals(verificationErrorString)) {
			Assert.fail(verificationErrorString);
		}
	}
	
	/**
	 * Test la presence d'un element
	 * 
	 */
	private boolean isElementPresent(By by) {
		try {
			driver.findElement(by);
			return true;
		} catch (NoSuchElementException e) {
			return false;
		}
	}
  
}